{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-product/add-product.component.ts","./src/app/add-product/add-product.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/app/product-list/product.model.ts","./src/app/product.service.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/token-interceptor.service.ts","./src/app/update-product/update-product.component.ts","./src/app/update-product/update-product.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAMW;;;;;AAQtD,MAAM,mBAAmB;IAK9B,YACU,QAAyB,EACzB,OAAgB;QADhB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,YAAO,GAAP,OAAO,CAAS;QAJ1B,UAAK,GAAY,aAAa,CAAC;QAO/B,gBAAW,GAAG,IAAI,wEAAY,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IAFlE,CAAC;IAMP,QAAQ;QAEN,6CAA6C;IAC/C,CAAC;IAED,UAAU;QAER,gCAAgC;QAChC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,KAAK,CAAC,SAAS,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAEjC,CAAC;;sFA3BU,mBAAmB;mGAAnB,mBAAmB;QCdhC,yEACI;QAAA,0EACI;QADE,+IAAc,gBAAY,IAAC;QAC7B,yEACI;QAAA,uDACJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,2EAEI;QAAA,wEACI;QAAA,qEACI;QAAA,qEAAK;QAAA,yEAAO;QAAA,sEAAU;QAAA,4DAAQ;QAAC,4DAAK;QACpC,sEAAI;QAAA,4EAAwE;QAAzC,uMAAmC;QAAC,4DAAK;QAA5E,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,wEAAY;QAAA,4DAAQ;QAAC,4DAAK;QACtC,sEAAI;QAAA,4EAA4E;QAA3C,yMAAqC;QAAC,4DAAK;QAAhF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,wEAAY;QAAA,4DAAQ;QAAC,4DAAK;QACtC,sEAAI;QAAA,4EAA4E;QAA3C,yMAAqC;QAAC,4DAAK;QAAhF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,wEAAY;QAAA,4DAAQ;QAAC,4DAAK;QACtC,sEAAI;QAAA,4EAA4E;QAA3C,yMAAqC;QAAC,4DAAK;QAAhF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,+EAAmB;QAAA,4DAAQ;QAAC,4DAAK;QAC7C,sEAAI;QAAA,6EAA4E;QAA3C,yMAAqC;QAAC,4DAAK;QAAhF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,yEAAa;QAAA,4DAAQ;QAAC,4DAAK;QACvC,sEAAI;QAAA,6EAAuE;QAArC,mMAA+B;QAAC,4DAAK;QAA3E,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,8EAAkB;QAAA,4DAAQ;QAAC,4DAAK;QAC5C,sEAAI;QAAA,6EAA6E;QAA1C,wMAAoC;QAAC,4DAAK;QAAjF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,4EAAgB;QAAA,4DAAQ;QAAC,4DAAK;QAC1C,sEAAI;QAAA,6EAA0E;QAAxC,sMAAkC;QAAC,4DAAK;QAA9E,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,wEAAyC;QAA7C,4DAAI;QACR,4DAAK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;;QA/CM,0DACJ;QADI,qFACJ;QAQuD,2DAAmC;QAAnC,8FAAmC;QAIjC,0DAAqC;QAArC,gGAAqC;QAIrC,0DAAqC;QAArC,gGAAqC;QAIrC,0DAAqC;QAArC,gGAAqC;QAIrC,0DAAqC;QAArC,gGAAqC;QAIpC,0DAA+B;QAA/B,0FAA+B;QAI9B,0DAAoC;QAApC,+FAAoC;QAIrC,0DAAkC;QAAlC,6FAAkC;;6FD1BvF,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACsB;AACH;AACS;AACjB;AACT;AAChB;;;AAMzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAG,EAAE;QACT,UAAU,EAAG,OAAO;QACpB,SAAS,EAAG,MAAM;KACnB;IACD;QACE,IAAI,EAAG,MAAM;QACb,SAAS,EAAG,yFAAoB;QAChC,WAAW,EAAG,CAAC,qDAAS,CAAC;KAE1B;IACD;QACE,IAAI,EAAG,KAAK;QACZ,SAAS,EAAG,sFAAmB;QAC/B,WAAW,EAAG,CAAC,qDAAS,CAAC;KAE1B;IACD;QACE,IAAI,EAAG,QAAQ;QACf,SAAS,EAAG,+FAAsB;KAEnC;IAED;QACE,IAAI,EAAG,UAAU;QACjB,SAAS,EAAG,8EAAiB;KAC9B;IACD;QACE,IAAI,EAAG,OAAO;QACd,SAAS,EAAG,qEAAc;KAC3B;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AClDD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QAEzB,2EAA+B;;6FDKlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACH;AAEC;AACT;AACa;AACiB;AAEF,CAAC,YAAY;AAC3C,CAAC,cAAc;AAET;AACuB;AACS;AACjB;AACT;AAEZ;AAEJ;AAE6B;AAEtE,gBAAgB;AACqC;;AAkC9C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAbT;QACT,+DAAc;QACd,0DAAW;QACX,sDAAS;QACT;YACE,OAAO,EAAG,sEAAiB;YAC3B,QAAQ,EAAG,mFAAuB;YAClC,KAAK,EAAG,IAAI;SACb;KAEF,YAlBQ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;YACX,kEAAmB;SAEpB;mIAcU,SAAS,mBA7BlB,2DAAY;QACZ,wEAAe;QACf,yFAAoB;QACpB,sFAAmB;QACnB,gGAAsB;QACtB,+EAAiB;QACjB,sEAAc,aAGd,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;QACX,kEAAmB;6FAgBV,SAAS;cA/BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAe;oBACf,yFAAoB;oBACpB,sFAAmB;oBACnB,gGAAsB;oBACtB,+EAAiB;oBACjB,sEAAc;iBACf;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;iBAEpB;gBACD,SAAS,EAAE;oBACT,+DAAc;oBACd,0DAAW;oBACX,sDAAS;oBACT;wBACE,OAAO,EAAG,sEAAiB;wBAC3B,QAAQ,EAAG,mFAAuB;wBAClC,KAAK,EAAG,IAAI;qBACb;iBAEF;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACzDD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AASpC,MAAM,SAAS;IAEpB,YACU,KAAmB,EACnB,OAAgB;QADhB,UAAK,GAAL,KAAK,CAAc;QACnB,YAAO,GAAP,OAAO,CAAS;IACvB,CAAC;IAEJ,WAAW;QACT,IAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAC;YAEvB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO,IAAI,CAAC;SAEb;aAAI;YACH,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;kEAjBU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,WAAW;IAOtB,YAAoB,KAAkB;QAAlB,UAAK,GAAL,KAAK,CAAa;QAL9B,iBAAY,GAAG,oCAAoC,CAAC;QAEpD,cAAS,GAAG,iCAAiC,CAAC;IAGZ,CAAC;IAE3C,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAM,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IACD,SAAS,CAAC,IAAI;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAM,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAGD,YAAY;IACZ,QAAQ;QAEN,OAAO,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAEzC,CAAC;IAED,mBAAmB;IACnB,QAAQ;QACN,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;IACtC,CAAC;;sEA3BU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICM9C,uEAAsD;IAAA,mEAAQ;IAAA,4DAAI;;;IAClE,uEAAqD;IAAA,gEAAK;IAAA,4DAAI;;;;IAC9D,uEAA+E;IAA1B,6SAAwB;IAAE,iEAAM;IAAA,4DAAI;;ADEtF,MAAM,eAAe;IAE1B,YACS,KAAmB,EAChB,OAAgB;QADnB,UAAK,GAAL,KAAK,CAAc;QAChB,YAAO,GAAP,OAAO,CAAS;QAG5B,UAAK,GAAY,oBAAoB;IAF/B,CAAC;IAIP,UAAU;QACR,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;IACR,CAAC;;8EAfU,eAAe;+FAAf,eAAe;QCV5B,qEAAK;QAAA,uDAAU;QAAA,4DAAK;QACpB,yEACI;QAAA,uEAAsB;QAAA,mEAAQ;QAAA,4DAAI;QAClC,uEAAsB;QAAA,sEAAW;QAAA,4DAAI;QAGrC,uGAAsD;QACtD,uGAAqD;QACrD,uGAA+E;QAKnF,4DAAM;;QAbD,0DAAU;QAAV,qFAAU;QAMe,0DAA2B;QAA3B,uFAA2B;QAC7B,0DAA2B;QAA3B,uFAA2B;QACzB,0DAA0B;QAA1B,sFAA0B;;6FDE3C,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICmBlB,sEAAmC;IAAA,4EAAiB;IAAA,4DAAM;;;IAD9D,0EACI;IAAA,kHAAmC;IACvC,4DAAM;;;;IADG,0DAA6B;IAA7B,qFAA6B;;;IAOlC,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IADpE,0EACI;IAAA,kHAAsC;IAC1C,4DAAM;;;;IADG,0DAAgC;IAAhC,qFAAgC;;;ADhB9D,MAAM,cAAc;IAMzB,YACU,KAAmB,EACnB,OAAgB;QADhB,UAAK,GAAL,KAAK,CAAc;QACnB,YAAO,GAAP,OAAO,CAAS;QAJ1B,gBAAW,GAAO,EAAE,CAAC;IAMjB,CAAC;IAQL,SAAS;QAGP,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;aACrC,SAAS;QACR,yBAAyB;QACzB,GAAG,GAAE;YACH,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC,GAAG,CAAC,KAAK,CAAC;YACvC,sDAAsD;YACtD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAI9B,CAAC;QACD,wBAAwB;QACxB,GAAG,GAAE,MAAK,CAAC,6CAA6C,CAAC,CAC1D;IACH,CAAC;IAGD,QAAQ,KAAU,CAAC;;4EAtCR,cAAc;8FAAd,cAAc;;QCV3B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAA2C;QAI3C,yEACI;QAAA,yEACE;QAAA,wEAAiB;QAAA,iEAAM;QAAA,4DAAK;QAC9B,4DAAM;QACN,yEAEI;QAAA,6EAEI;QAF2B,ySAA+B,eAAW,IAAC;QAEtE,2EACI;QAAA,6EAAoB;QAAA,yEAAa;QAAA,4DAAQ;QACzC,iFACA;QADgC,8LAA+B;QAA/D,4DACA;QAAA,6GACI;QAER,4DAAM;QACN,2EACI;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,iFACA;QADuC,iMAAkC;QAAzE,4DACA;QAAA,6GACI;QAER,4DAAM;QAEN,8EAA+C;QAAA,kEAAM;QAAA,4DAAS;QAElE,4DAAO;QAEX,4DAAM;QACV,4DAAM;QAIV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;QAxBsD,2DAA+B;QAA/B,0FAA+B;QAC1D,0DAAqC;QAArC,8FAAqC;QAMH,0DAAkC;QAAlC,6FAAkC;QACpE,0DAAwC;QAAxC,8FAAwC;;6FDf5D,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;IC2BtB,qEAKJ;;;;IAFI,2FAA+B;IAF/B,iJAA0B;;;;IAFlC,qEACI;IAAA,qEAAI;IAAA,sHAKJ;IAAA,4DAAK;IACL,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,wDAAmB;IAAA,4DAAK;IAC5B,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEACI;IAAA,6EAAoE;IAA/B,uWAA8B;IAAC,kEAAM;IAAA,4DAAS;IAEnF,6EAAyF;IAAvC,uYAAsC;IAAC,kEAAM;IAAA,4DAAS;IAC5G,4DAAK;IAGT,4DAAK;;;;IAlBQ,0DAAiB;IAAjB,kFAAiB;IAMtB,0DAAyB;IAAzB,uFAAyB;IACzB,0DAAyB;IAAzB,uFAAyB;IACzB,0DAAyB;IAAzB,uFAAyB;IACzB,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAwB;IAAxB,sFAAwB;;ADzB7C,MAAM,oBAAoB;IAgB/B,YACU,QAAyB,EACzB,OAAgB;QADhB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,YAAO,GAAP,OAAO,CAAS;QAhB1B,UAAK,GAAY,cAAc,CAAC;QAOhC,kBAAkB;QAClB,eAAU,GAAY,EAAE,CAAC;QACzB,gBAAW,GAAY,CAAC,CAAC;QAEzB,+CAA+C;QAC/C,cAAS,GAAY,KAAK,CAAC;IAKvB,CAAC;IAEL,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,gDAAgD;IACpF,CAAC;IAID,QAAQ;QACN,uEAAuE;QACvE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;aAC1B,SAAS,CACR,CAAC,IAAI,EAAC,EAAE;YACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAGjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAK7B,CAAC,CAAC,CAAC;IAKL,CAAC;IAEA,QAAQ;IAET,aAAa,CAAC,OAAa,EAAG,KAAK;QAIjC,2BAA2B;QAC3B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;aACnC,SAAS,CAAC,GAAE,EAAE;YACb,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;QAC/B,CAAC,CAAC;IAKJ,CAAC;IAEC,kBAAkB;IAIlB,WAAW,CAAC,OAAO;QACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;;wFAvEQ,oBAAoB;oGAApB,oBAAoB;QCZjC,yEACI;QAAA,yEACI;QAAA,uDACJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,wEACI;QAAA,qEACI;QAAA,qEACI;QAAA,4EACI;QAD4B,4IAAS,iBAAa,IAAC;QAGnD,wDACJ;QAAA,4DAAS;QACb,4DAAK;QACL,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,iEAAS;QACb,4DAAK;QACT,4DAAQ;QAER,yEACI;QAAA,iHACI;QAmBR,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAhDE,0DACJ;QADI,qFACJ;QAU4B,0DACJ;QADI,iHACJ;QAYJ,2DAAkD;QAAlD,iFAAkD;;6FDd7D,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEXD;AAAA;AAAA,+CAA+C;AAExC,MAAM,YAAY;IACrB,wBAAwB;IAGxB,YAKW,SAAkB,EAClB,WAAoB,EACpB,WAAoB,EACpB,WAAoB,EACpB,WAAoB,EACpB,KAAc,EACd,UAAmB,EACnB,QAAiB;QAPjB,cAAS,GAAT,SAAS,CAAS;QAClB,gBAAW,GAAX,WAAW,CAAS;QACpB,gBAAW,GAAX,WAAW,CAAS;QACpB,gBAAW,GAAX,WAAW,CAAS;QACpB,gBAAW,GAAX,WAAW,CAAS;QACpB,UAAK,GAAL,KAAK,CAAS;QACd,eAAU,GAAV,UAAU,CAAS;QACnB,aAAQ,GAAR,QAAQ,CAAS;IACzB,CAAC;CACP;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAcpC,MAAM,cAAc;IAKzB,YACU,KAAkB,EAClB,OAAgB;QADhB,UAAK,GAAL,KAAK,CAAa;QAClB,YAAO,GAAP,OAAO,CAAS;QAI1B,YAAO,GAAU,uBAAuB,CAAC;IAHrC,CAAC;IAOL,WAAW;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC;IACnD,CAAC;IAED,8CAA8C;IAC9C,UAAU,CAAC,IAAI;QAEb,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,EAAG,EAAC,SAAS,EAAG,IAAI,EAAC,CAAC,CAAC,gCAAgC;aACrG,SAAS,CACR,IAAI,GAAE,GAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC,CAC3B;IAEH,CAAC;IAED,QAAQ;IAER,aAAa,CAAC,IAAI;QAChB,wBAAwB;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,EAAC,EAAC,SAAS,EAAG,IAAI,EAAC,CAAC;IAGtE,CAAC;IAID,QAAQ;IACR,aAAa,CAAC,OAAsB;QAClC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,EAAE,EAAC,MAAM,EAAG,OAAO,EAAC,CAAC;IAGvE,CAAC;IAGF,MAAM,CAAG,OAAsB;QAC7B,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;;4EAxDW,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICoBlB,sEAAmC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC1D,sEAAkC;IAAA,8FAAmC;IAAA,4DAAM;;;IAF/E,0EACI;IAAA,qHAAmC;IACnC,qHAAkC;IACtC,4DAAM;;;;IAFG,0DAA6B;IAA7B,qFAA6B;IAC7B,0DAA4B;IAA5B,oFAA4B;;;IAQjC,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEAAqC;IAAA,mFAAwB;IAAA,gEAAK;IAAA,kFAAsB;IAAA,gEAAK;IAAA,4EAAgB;IAAA,gEAAK;IAAA,4EAAgB;IAAA,gEAAK;IAAA,iFAAqB;IAAA,4DAAM;;;IAElK,sEAAuC;IAAA,iGAAsC;IAAA,4DAAM;;;IAJvF,0EACI;IAAA,qHAAsC;IACtC,sHAAqC;IAErC,qHAAuC;IAE3C,4DAAM;;;;IALG,0DAAgC;IAAhC,qFAAgC;IAChC,0DAA+B;IAA/B,oFAA+B;IAE/B,0DAAiC;IAAjC,sFAAiC;;;ADvB/D,MAAM,iBAAiB;IAG5B,YACU,KAAmB,EACnB,OAAgB;QADhB,UAAK,GAAL,KAAK,CAAc;QACnB,YAAO,GAAP,OAAO,CAAS;QAH1B,mBAAc,GAAO,EAAE,CAAC;IAIlB,CAAC;IAEP,YAAY;QAEV,mCAAmC;QACnC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC;aAC3C,SAAS;QACR,yBAAyB;QACzB,GAAG,GAAE;YAEH,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC,GAAG,CAAC,KAAK,CAAC;YAEvC,KAAK,CAAC,yBAAyB,CAAC;YAEhC,6DAA6D;YAE7D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAK9B,CAAC,EACD,GAAG,GAAE,QAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CACtB;IAEH,CAAC;IAMD,QAAQ;IACR,CAAC;;kFAtCU,iBAAiB;iGAAjB,iBAAiB;;QCR9B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAA2C;QAI3C,yEACI;QAAA,yEACE;QAAA,wEAAiB;QAAA,mEAAQ;QAAA,4DAAK;QAChC,4DAAM;QACN,yEAEI;QAAA,6EAEI;QAF6B,6SAA6B,kBAAc,IAAC;QAEzE,2EACI;QAAA,6EAAoB;QAAA,yEAAa;QAAA,4DAAQ;QACzC,iFACA;QADgC,oMAAkC;QAAlE,4DACA;QAAA,gHACI;QAIR,4DAAM;QACN,2EACI;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,iFACA;QADuC,uMAAqC;QAA5E,4DACA;QAAA,gHACI;QAOR,4DAAM;QAEN,8EAA+C;QAAA,oEAAQ;QAAA,4DAAS;QAEpE,4DAAO;QAEX,4DAAM;QACV,4DAAM;QAIV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;QA/BsD,2DAAkC;QAAlC,6FAAkC;QAC7D,0DAAqC;QAArC,8FAAqC;QAQH,0DAAqC;QAArC,gGAAqC;QACvE,0DAAwC;QAAxC,8FAAwC;;6FDnB5D,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAqD;AAGR;;AAKtC,MAAM,uBAAuB;IAElC,YAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IAAI,CAAC;IAE7C,SAAS,CAAC,GAAG,EAAC,GAAG;QAEf,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,yDAAW,CAAC;QAEjD,IAAI,YAAY,GAAG,GAAG,CAAC,KAAK,CAC1B;YACI,UAAU,EAAG,EAAE,aAAa,EAAG,QAAQ,WAAW,CAAC,QAAQ,EAAE,EAAE,EAAI;SAEtE,CAEF;QACD,OAAO,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;IACjC,CAAC;;8FAhBU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;6FAEP,uBAAuB;cAHnC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEW;;;;;AAQtD,MAAM,sBAAsB;IAOjC,YACU,QAAyB,EACzB,OAAgB;QADhB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,YAAO,GAAP,OAAO,CAAS;QAP1B,UAAK,GAAY,gBAAgB,CAAC;QAElC,gBAAW,GAAG,IAAI,wEAAY,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IAQlE,CAAC;IAEP,QAAQ;QACN,uBAAuB;QACvB,gCAAgC;QAC5B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAGhD,CAAC;IAED,SAAS,CAAC,WAAW;QAEnB,4BAA4B;QAG5B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC;aACvC,SAAS,CACR,GAAG,GAAE;YACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAElC,CAAC,EACD,GAAG,GAAE;YACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEnB,CAAC,CACF;IAIH,CAAC;;4FA1CU,sBAAsB;sGAAtB,sBAAsB;QCVnC,yEACI;QAAA,uEACI;QAAA,yEACI;QAAA,uDACJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,2EAEI;QAAA,wEACI;QAAA,qEACI;QAAA,qEAAK;QAAA,yEAAO;QAAA,sEAAU;QAAA,4DAAQ;QAAC,4DAAK;QACpC,sEAAI;QAAA,4EAAyE;QAA1C,0MAAmC;QAAE,4DAAK;QAA7E,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,wEAAY;QAAA,4DAAQ;QAAC,4DAAK;QACtC,sEAAI;QAAA,4EAA4E;QAA3C,4MAAqC;QAAC,4DAAK;QAAhF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,wEAAY;QAAA,4DAAQ;QAAC,4DAAK;QACtC,sEAAI;QAAA,4EAA6E;QAA5C,4MAAqC;QAAE,4DAAK;QAAjF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,wEAAY;QAAA,4DAAQ;QAAC,4DAAK;QACtC,sEAAI;QAAA,4EAA4E;QAA3C,4MAAqC;QAAC,4DAAK;QAAhF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,+EAAmB;QAAA,4DAAQ;QAAC,4DAAK;QAC7C,sEAAI;QAAA,4EAA4E;QAA3C,4MAAqC;QAAC,4DAAK;QAAhF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,yEAAa;QAAA,4DAAQ;QAAC,4DAAK;QACvC,sEAAI;QAAA,6EAAuE;QAArC,sMAA+B;QAAC,4DAAK;QAA3E,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,8EAAkB;QAAA,4DAAQ;QAAC,4DAAK;QAC5C,sEAAI;QAAA,6EAA6E;QAA3C,2MAAoC;QAAE,4DAAK;QAAjF,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAK;QAAA,yEAAO;QAAA,4EAAgB;QAAA,4DAAQ;QAAC,4DAAK;QAC1C,sEAAI;QAAA,6EAAyE;QAAxC,yMAAkC;QAAC,4DAAK;QAA7E,4DAAI;QACR,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,6EAA4E;QAAxC,8IAAW,8BAAsB,IAAC;QAAC,4DAAK;QAAhF,4DAAI;QACR,4DAAK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;;QA/CM,0DACJ;QADI,qFACJ;QAQuD,2DAAmC;QAAnC,8FAAmC;QAIjC,0DAAqC;QAArC,gGAAqC;QAIrC,0DAAqC;QAArC,gGAAqC;QAIrC,0DAAqC;QAArC,gGAAqC;QAIrC,0DAAqC;QAArC,gGAAqC;QAIpC,0DAA+B;QAA/B,0FAA+B;QAI/B,0DAAoC;QAApC,+FAAoC;QAIrC,0DAAkC;QAAlC,6FAAkC;;6FD9BtF,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AETD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\nimport { ProductService } from '../product.service';\n\nimport { Router } from '@angular/router';\n\nimport { ProductModel } from '../product-list/product.model';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n\n\n  title : String = 'Add Product';\n\n  constructor(\n    private _product : ProductService ,\n    private _router : Router\n    ) { }\n\n  productItem = new ProductModel(null,null,null,null,null,null,null,null);\n\n\n\n  ngOnInit(): void {\n\n    // this.productItem = this._product.getter();\n  }\n\n  AddProduct()\n  {\n    // console.log(this.productItem)\n    this._product.newProduct(this.productItem)\n      console.log('Called');\n      alert('Success');\n      this._router.navigate(['/']);\n\n  }\n\n  \n}\n","<div class=\"card\">\n    <form (ngSubmit) = 'AddProduct()'>\n        <div class=\"card-header\">\n            {{title}}\n        </div>\n        <div class=\"card-body\">\n            <div class=\"table-responsive\">\n                <table class=\"table\">\n\n                    <tbody>\n                        <tr>\n                            <td> <label>Product Id</label> </td>\n                            <td><input type=\"text\" name=\"p_id\" [(ngModel)]='productItem.productId'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product Name</label> </td>\n                            <td><input type=\"text\" name=\"p_name\" [(ngModel)]='productItem.productName'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product Code</label> </td>\n                            <td><input type=\"text\" name=\"p_code\" [(ngModel)]='productItem.productCode'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product Date</label> </td>\n                            <td><input type=\"text\" name=\"p_date\" [(ngModel)]='productItem.releaseDate'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product Description</label> </td>\n                            <td><input type=\"text\" name=\"p_desc\" [(ngModel)]='productItem.description'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product Price</label> </td>\n                            <td><input type=\"text\" name=\"p_price\" [(ngModel)]='productItem.price'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product StarRating</label> </td>\n                            <td><input type=\"text\" name=\"p_rating\" [(ngModel)]='productItem.starRating'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product ImageUrl</label> </td>\n                            <td><input type=\"text\" name=\"p_image\" [(ngModel)]='productItem.imageUrl'></td>\n                        </tr>\n                        <tr>\n                            <td><input type=\"submit\" value=\"submit\"></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { UpdateProductComponent } from './update-product/update-product.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth.guard';\n\n\n\n\n\nconst routes: Routes = [\n  {\n    path : '',\n    redirectTo : '/list',\n    pathMatch : 'full'\n  },\n  {\n    path : 'list' , \n    component : ProductListComponent,\n    canActivate : [AuthGuard]\n\n  },\n  {\n    path : 'add' , \n    component : AddProductComponent,\n    canActivate : [AuthGuard]\n\n  },\n  {\n    path : 'change' , \n    component : UpdateProductComponent,\n\n  },\n\n  {\n    path : 'register' , \n    component : RegisterComponent\n  },\n  {\n    path : 'login' , \n    component : LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Products';\n}\n","<app-header></app-header>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, EventEmitter } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ProductListComponent } from './product-list/product-list.component';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\"; //httpclient\nimport { FormsModule } from \"@angular/forms\"; //forms module\n\nimport { ProductService } from \"./product.service\";\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { UpdateProductComponent } from './update-product/update-product.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { AuthService } from \"./auth.service\";\n\nimport { AuthGuard } from \"./auth.guard\";\n\nimport { TokenInterceptorService } from \"./token-interceptor.service\";\n\n//reactive forms\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ProductListComponent,\n    AddProductComponent,\n    UpdateProductComponent,\n    RegisterComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [\n    ProductService,\n    AuthService,\n    AuthGuard,\n    {\n      provide : HTTP_INTERCEPTORS,\n      useClass : TokenInterceptorService,\n      multi : true\n    }\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(\n    private _auth : AuthService,\n    private _router : Router\n  ) {}\n\n  canActivate():boolean{\n    if(this._auth.loggedIn()){\n\n      console.log('true');\n      return true;\n\n    }else{\n      this._router.navigate(['/login']);\n      return false;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _registerUrl = \"http://localhost:3010/api/register\";\n\n  private _loginUrl = \"http://localhost:3010/api/login\";\n\n\n  constructor(private _http : HttpClient) { }\n\n  registerUser(user){\n    return this._http.post<any>(this._registerUrl,user);\n  }\n  loginUser(user){\n    return this._http.post<any>(this._loginUrl,user);\n  }\n\n\n  //auth Guard\n  loggedIn(){\n\n    return !!localStorage.getItem('token');\n\n  }\n\n  //token Interceptor\n  getToken(){\n    return localStorage.getItem('token')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    public _auth : AuthService , \n    protected _router : Router\n    ) { }\n\n  title : String = 'PRODUCT MANAGEMENT'\n\n  logoutUser(){\n    localStorage.removeItem('token')\n    this._router.navigate(['/login'])\n  }\n\n  ngOnInit(): void {\n  }\n\n \n}\n","<h1> {{title}} </h1>\n<div class=\"card-header\">\n    <a routerLink='/list'>Products</a>\n    <a routerLink='/add' >Add Product</a>\n\n\n    <a routerLink='/register' *ngIf = '!_auth.loggedIn()'>Register</a>\n    <a routerLink='/login'  *ngIf = '!_auth.loggedIn()' >Login</a>\n    <a style=\"cursor:pointer\" *ngIf = '_auth.loggedIn()' (click) = 'logoutUser()' >Logout</a>\n    \n\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n\n  loginedUser :any ={};\n\n  constructor(\n    private _auth : AuthService,\n    private _router : Router,\n    \n  ) { }\n\n\n\n  \n\n\n\n  loginUser(){\n\n    \n    this._auth.loginUser(this.loginedUser)\n    .subscribe(\n      // res=>console.log(res),\n      res=>{\n        localStorage.setItem('token',res.token)\n        //after successful login navigate to product-list page\n        this._router.navigate(['/'])\n\n\n\n      },\n      // err=>console.log(err)\n      err=>alert('Login Failed : Invalid Username or Password')\n    )\n  }\n\n\n  ngOnInit(): void {}\n\n\n  \n\n\n\n  \n\n\n\n\n}\n","<div class=\"py-5\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mx-auto\">\n            <span class=\"anchor\" id=\"formLogin\"></span>\n            \n            <!-- form card Register --> \n\n            <div class=\"card rounded-0\">\n                <div class=\"card-header\">\n                  <h3 class=\"mb-0\">Log In</h3>\n                </div>\n                <div class=\"card-body\">\n\n                    <form name=\"form\" #UL=\"ngForm\" (ngSubmit) = \"UL.form.valid && loginUser()\" novalidate>\n\n                        <div class=\"form-group\">\n                            <label for=\"uname1\">Email address</label>\n                            <input type=\"text\" name=\"email\" [(ngModel)]=\"loginedUser.email\" #email=\"ngModel\" [ngClass]=\"{ 'is-invalid': UL.submitted && email.invalid }\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" required>\n                            <div *ngIf=\"UL.submitted && email.invalid\" class=\"invalid-feedback\">\n                                <div *ngIf=\"email.errors.required\">Email is required</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Password</label>\n                            <input type=\"password\" name=\"password\" [(ngModel)]=\"loginedUser.password\" #password=\"ngModel\" [ngClass]=\"{ 'is-invalid': UL.submitted && email.invalid }\" class=\"form-control\" id=\"exampleInputPassword1\" required>\n                            <div *ngIf=\"UL.submitted && password.invalid\" class=\"invalid-feedback\">\n                                <div *ngIf=\"password.errors.required\">Password is required</div>\n                            </div>\n                        </div>\n                        \n                        <button type=\"submit\"  class=\"btn btn-success\">Log In</button>\n\n                    </form>\n\n                </div>\n            </div>\n            <!-- /form card Register -->\n\n\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { ProductModel } from \"./product.model\"; \n\nimport { ProductService } from '../product.service'; // ProductService\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  title : String = 'Product List';\n\n\n\n  products : ProductModel[] ; //it is contain no. of array from prodect.model.ts file\n\n\n  //image properties\n  imageWidth : number = 50;\n  imageMargin : number = 2;\n\n  //set inital case showImage value is false(---)\n  showImage : boolean =false;\n\n  constructor(\n    private _product : ProductService , \n    private _router : Router\n  ) { }\n\n  toggleImage() : void{\n    this.showImage = !this.showImage; // user clicking btn ,value becomes [!]true(---)\n  }\n\n\n\n  ngOnInit(): void {\n    // calling the getProducts() and loading the products to products array\n    this._product.getProducts()\n    .subscribe(\n      (data)=>{\n      this.products = JSON.parse(JSON.stringify(data));\n      \n      \n      console.log(this.products);\n\n      \n\n      \n    });\n\n\n    \n   \n  }\n\n   //delete\n\n  removeProduct(product : any , index)\n  {\n\n    \n    // console.log('sdcfasfaf')\n    this._product.deleteProduct(product)\n    .subscribe(()=>{\n      this.products.splice(index,1)\n    })\n   \n    \n\n\n  }\n\n    //goto update form\n\n    \n\n    editProduct(product){\n      this._product.setter(product);\n      this._router.navigate(['/change'])\n    }\n  \n\n\n  \n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        {{title}}\n    </div>\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>\n                            <button class=\"btn btn-primary\" (click)='toggleImage()'>\n                                <!-- images are hidden button will show image (vice versa) -->\n                                <!-- showImage is true =>print 'Hide Image', showImage is false =>print 'Show Image'-->\n                                {{showImage ? 'Hide' : 'Show'}} Image \n                            </button>\n                        </th>\n                        <th>Product</th>\n                        <th>Code</th>\n                        <th>Available</th>\n                        <th>Price</th>\n                        <th>5 Star Rating</th>\n                        <th></th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr *ngFor = 'let product of products ; let i = index'>\n                        <td><img *ngIf='showImage' \n                            [src] = 'product.imageUrl'\n                            [title] = 'product.productName'\n                            [style.width.px] = 'imageWidth'\n                            [style.margin.px] = 'imageMargin'>\n                        </td>\n                        <td>{{ product.productName }}</td>\n                        <td>{{ product.productCode }}</td>\n                        <td>{{ product.releaseDate }}</td>\n                        <td>{{ product.price }}</td>\n                        <td>{{ product.starRating }}</td>\n                        <td>\n                            <button class=\"btn btn-success styl\" (click)='editProduct(product)'>update</button>\n\n                            <button class=\"btn btn-danger styl\" type=\"submit\" (click) = 'removeProduct(product , i)'>delete</button>\n                        </td>\n                        \n\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n\n\n<!-- [routerLink]=\"['/change', product ]\" -->\n","// structure a particular product with datatype\r\n\r\nexport class ProductModel{\r\n    // public _id ?: String;\r\n\r\n\r\n    constructor(\r\n\r\n\r\n\r\n        \r\n        public productId : String,\r\n        public productName : String,\r\n        public productCode : String,\r\n        public releaseDate : String,\r\n        public description : String,\r\n        public price : Number,\r\n        public starRating : Number,\r\n        public imageUrl : String\r\n    ) {}\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient} from \"@angular/common/http\"; //http\nimport { Router } from '@angular/router';\n\n\nimport { ProductModel } from \"./product-list/product.model\";\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n\n  product : ProductModel;\n\n  constructor(\n    private _http : HttpClient ,\n    private _router : Router\n  ) { }\n\n\n  baseUri:string = 'http://localhost:3010';\n \n    \n\n  getProducts(){\n    return this._http.get(this.baseUri + '/products')\n  }\n  \n  //passing the form data to the server(backend)\n  newProduct(item)\n  {\n    return this._http.post(this.baseUri + '/insert' , {\"product\" : item}) // sending item named as product\n    .subscribe(\n      data=> {console.log(data)}\n    )\n\n  }\n\n  //delete\n\n  deleteProduct(item){\n    // console.log('qqqqqq')\n     return this._http.post(this.baseUri + '/delete',{\"product\" : item})\n     \n\n  }\n\n\n\n  //update\n  updateProduct(product : ProductModel){\n    console.log(product)\n     return this._http.post(this.baseUri + '/update', {'list' : product})\n     \n\n  }\n\n\n setter(  product : ProductModel  ){\n   this.product=product;\n   console.log(product);\n }\n\n getter(){\n   return this.product;\n }\n\n  \n  \n     \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registeredUser : any={};\n  constructor(\n    private _auth : AuthService,\n    private _router : Router\n    ) { }\n\n  registerUser(){\n\n    // console.log(this.registeredUser)\n    this._auth.registerUser(this.registeredUser)\n    .subscribe(\n      // res=>console.log(res),\n      res=>{\n\n        localStorage.setItem('token',res.token)\n\n        alert('Successfully Registered')\n\n        //after successful registration navigate to product-list page\n\n        this._router.navigate(['/'])\n\n\n\n\n      },\n      err=>console.log(err)\n    )\n    \n  }\n\n\n\n\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"py-5\">\n    <div class=\"row\">\n        <div class=\"col-md-6 mx-auto\">\n            <span class=\"anchor\" id=\"formLogin\"></span>\n            \n            <!-- form card Register -->\n\n            <div class=\"card rounded-0\">\n                <div class=\"card-header\">\n                  <h3 class=\"mb-0\">Register</h3>\n                </div>\n                <div class=\"card-body\">\n\n                    <form name=\"form\" #UR = \"ngForm\" (ngSubmit)=\"UR.form.valid && registerUser()\" novalidate>\n\n                        <div class=\"form-group\">\n                            <label for=\"uname1\">Email address</label>\n                            <input type=\"text\" name=\"email\" [(ngModel)]=\"registeredUser.email\" #email=\"ngModel\" [ngClass]=\"{ 'is-invalid': UR.submitted && email.invalid }\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" required >\n                            <div *ngIf=\"UR.submitted && email.invalid\" class=\"invalid-feedback\">\n                                <div *ngIf=\"email.errors.required\">Email is required</div>\n                                <div *ngIf=\"email.errors.pattern\">Email must be a valid email address</div>\n                            </div>\n\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Password</label>\n                            <input type=\"password\" name=\"password\" [(ngModel)]=\"registeredUser.password\" #password=\"ngModel\" [ngClass]=\"{ 'is-invalid': UR.submitted && password.invalid }\"  class=\"form-control\" id=\"exampleInputPassword1\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[ -/:-@\\[-`{-~]).{6,20}$\" minlength=\"6\" required >\n                            <div *ngIf=\"UR.submitted && password.invalid\" class=\"invalid-feedback\">\n                                <div *ngIf=\"password.errors.required\">Password is required</div>\n                                <div *ngIf=\"password.errors.pattern\">Password Must contain : <br> At least One number , <br> One uppercase , <br> One lowercase , <br> One special character</div>\n\n                                <div *ngIf=\"password.errors.minlength\">Password must be at least 6 characters</div>\n                                \n                            </div>\n\n                        </div>\n                        \n                        <button type=\"submit\"  class=\"btn btn-primary\">Register</button>\n\n                    </form>\n\n                </div>\n            </div>\n            <!-- /form card Register -->\n\n\n        </div>\n    </div>\n</div>","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from \"@angular/common/http\";\n\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private _injector : Injector) { }\n\n  intercept(req,nxt){\n\n    let authService = this._injector.get(AuthService)\n\n    let tokenizedReq = req.clone(\n      {\n          setHeaders : { Authorization : `wall ${authService.getToken()}`   }\n\n      }\n\n    )\n    return nxt.handle(tokenizedReq)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { ProductModel } from '../product-list/product.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css']\n})\nexport class UpdateProductComponent implements OnInit {\n\n  title : String = 'Update Product';\n\n  productItem = new ProductModel(null,null,null,null,null,null,null,null);\n\n\n  constructor(\n    private _product : ProductService,\n    private _router : Router\n\n\n    ) { }\n\n  ngOnInit(): void {\n    // this.getProduct(id);\n    // Automatically fill the fields\n        this.productItem = this._product.getter();\n        \n\n  }\n\n  upProduct(productItem){\n\n    // console.log(productItem);\n\n\n    this._product.updateProduct(productItem)\n    .subscribe(\n      res=>{\n        console.log(res);\n        this._router.navigate(['/list'])\n        \n      },\n      err=>{\n        console.log(err);\n        \n      }\n    )\n\n\n\n  }\n \n  \n\n}\n","<div class=\"card\">\n    <form >\n        <div class=\"card-header\">\n            {{title}}\n        </div>\n        <div class=\"card-body\">\n            <div class=\"table-responsive\">\n                <table class=\"table\">\n\n                    <tbody>\n                        <tr>\n                            <td> <label>Product Id</label> </td>\n                            <td><input type=\"text\" name=\"p_id\" [(ngModel)]='productItem.productId' ></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product Name</label> </td>\n                            <td><input type=\"text\" name=\"p_name\" [(ngModel)]='productItem.productName'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product Code</label> </td>\n                            <td><input type=\"text\" name=\"p_code\" [(ngModel)]='productItem.productCode' ></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product Date</label> </td>\n                            <td><input type=\"text\" name=\"p_date\" [(ngModel)]='productItem.releaseDate'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product Description</label> </td>\n                            <td><input type=\"text\" name=\"p_desc\" [(ngModel)]='productItem.description'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product Price</label> </td>\n                            <td><input type=\"text\" name=\"p_price\" [(ngModel)]='productItem.price'></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product StarRating</label> </td>\n                            <td><input type=\"text\" name=\"p_rating\"[(ngModel)]='productItem.starRating' ></td>\n                        </tr>\n                        <tr>\n                            <td> <label>Product ImageUrl</label> </td>\n                            <td><input type=\"text\" name=\"p_image\"[(ngModel)]='productItem.imageUrl'></td>\n                        </tr>\n                        <tr>\n                            <td><input type=\"submit\" value=\"submit\" (click) = \"upProduct(productItem)\"></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </form>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}